##############################################################
# PostgreSQL Dump | Archive Mode Backup
##############################################################
#* PostgreSQL은 WAL(Write ahead log; 미리쓰기기로그)을 pg_xlog에서 관리
#* 이 로그는 데이터베이스에 대한 모든 조작 기록을 보관하고 있어, 서버가 갑자기 비정상적으로 종료된경우 데이터파일에 적용하지 못한 작업은 이 로그파일을 읽어서 복구
#* 이 로그를 타겟 서버로 보내, 이 로그의 내용을 그대로 실행하여 원본 서버와 똑같이 복제
#* 또한 특정시점 까지만 실행하도록 하여, 특정시점으로도 복구 가능

#* 장점
#* 1. 파일 시스템을 백업할 때, 파일 시스템 상태에 대해서 신경 쓸 필요가 없습니다. 즉 파일 시스템의 스냅샷 기능을 고려할 필요가 없습니다.
#* 2. 복원 작업에 필요한 WAL 파일의 수량은 제한이 없기 때문에, 백업을 시작한 시점 이후에 생긴 WAL 로그파일만 보관된다면, 백업 기간이 아무리 길어져도 복구가 가능합니다.
#* 이는 전체 백업을 자주 할 수 없는 대용량 데이터베이스 백업에서 유용합니다.
#* 3. 복원을 할 때 WAL 파일의 내용을 끝까지 실행할 필요가 없습니다. 이 복구를 특정시점 복구 point-in-time recovery 라고 합니다.
#* 4. 다른 호스트에 전체백업을 복원한 후, 운영서버에서 만들어진 WAL 파일을 주기적으로 다른 호스트로 복사하여 반영해 놓으면, 운영서버에서 장애가 발생할 때 빠르게 복구가 가능합니다.

#* 단점
#* 이 작업도 특정 데이터베이스만을 대상으로 할 수 없고 전체를 대상으로 합니다.
#* 또한 아카이브 로그를 저장해야 하기 때문에 디스크의 여유 공간도 많이 필요합니다.
#* 따라서 아카이브 로그 파일이 계속 쌓이지 않도록 관리해 주어야 합니다.
#* 참고로 계속 쌓이지 않도록 파일을 로테이션 방식으로 재사용할 수 있도록 설정할 수도 있습니다.

Ref
https://mozi.tistory.com/560?category=1003665